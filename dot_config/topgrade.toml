# Include any additional configuration file(s)
# [include] sections are processed in the order you write them
# Files in $CONFIG_DIR/topgrade.d/ are automatically included before this file
# [include]
# paths = ["/etc/topgrade.toml", "~/.config/topgrade.d/*.toml"]

[misc]
# Run `sudo -v` to cache credentials at the start of the run
# This avoids a blocking password prompt in the middle of an unattended run
# (default: false)
pre_sudo = true

# Sudo command to be used
# sudo_command = "sudo"

# Disable specific steps - same options as the command line flag
# disable = ["system", "emacs"]

# Ignore failures for these steps
# ignore_failures = ["powershell"]

# List of remote machines with Topgrade installed on them
# remote_topgrades = ["toothless", "pi", "parnas"]

# Path to Topgrade executable on remote machines
# remote_topgrade_path = ".cargo/bin/topgrade"

# Arguments to pass to SSH when upgrading remote systems
# ssh_arguments = "-o ConnectTimeout=2"

# Arguments to pass tmux when pulling Repositories
# tmux_arguments = "-S /var/tmux.sock"

# Do not set the terminal title (default: true)
set_title = true

# Display the time in step titles (default: true)
display_time = true

# Don't ask for confirmations (no default value)
assume_yes = true

# Do not ask to retry failed steps (default: false)
no_retry = true

# Run inside tmux (default: false)
run_in_tmux = true

# Changes the way topgrade interacts with
# the tmux session, creating the session
# and only attaching to it if not inside tmux
# (default: "attach_if_not_in_session", allowed values: "attach_if_not_in_session", "attach_always")
# tmux_session_mode = "attach_if_not_in_session"

# Cleanup temporary or old files (default: false)
cleanup = true

# Send a notification for every step (default: false)
notify_each_step = true

# Skip sending a notification at the end of a run (default: false)
skip_notify = false

# The Bash-it branch to update (default: "stable")
# bashit_branch = "stable"

# Run specific steps - same options as the command line flag
# only = ["system", "emacs"]

# Whether to self update
#
# this will be ignored if the binary is built without self update support
#
# available also via setting the environment variable TOPGRADE_NO_SELF_UPGRADE)
no_self_update = false

# Extra tracing filter directives
# These are prepended to the `--log-filter` argument
# See: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html#directives
# log_filters = ["topgrade::command=debug", "warn"]

# Default disabled steps for manually managed tools
# disable = [
#     "system",     # Still handled manually via Software Update or unattended-upgrades
#     "firmware",   # May not apply to macOS
# ]

# Log but continue on failures for these steps
# ignore_failures = [
#     "containers",
#     "node",
#     "gem",
# ]

# Git repositories to pull
[git]
repos = [
    "/Users/osama/Code",
]
# Max concurrent git pulls
max_concurrency = 8
# Arguments for git pull
arguments = "--rebase --autostash"
# Pull predefined repositories
pull_predefined = true

# Commands to run before anything
[pre_commands]
"Network check" = "ping -c1 1.1.1.1"
"Save Homebrew bundle" = "brew bundle dump --force --file=~/Code/osamakaram/dotfiles/Brewfile"
# "Backup dotfiles" = "tar --exclude-vcs -czf ~/.local/backups/config-$(date +%Y%m%d).tar.gz ~/.zshrc ~/.zprofile ~/.zshenv ~/.config"

# Custom commands for specific tools
[commands]
"Clean leftover Docker resources" = "docker system prune -f"

# MacOS specific configuration
[brew]
# Apply all available updates for Homebrew
greedy_cask = true
# Update formulae built from HEAD
fetch_head = true

# Python package managers
[python]
enable_pip_review = true
enable_pipupgrade = true
