# ~/.config/starship.toml
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Sets user-defined palette
# Palettes must be defined _after_ this line
palette = "catppuccin_macchiato"

add_newline = false
command_timeout = 500
format = """$env_var$username$hostname$directory$git_branch$git_status$kubernetes$docker_context\
$python$terraform$golang$nodejs$time$cmd_duration$status$character"""

[character]
success_symbol = "[❯](green)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](green)"
vimcmd_replace_one_symbol = "[❮](purple)"
vimcmd_replace_symbol = "[❮](purple)"
vimcmd_visual_symbol = "[❮](yellow)"

# Palette definitions
[palettes.catppuccin_latte]
rosewater = "#dc8a78"
flamingo = "#dd7878"
pink = "#ea76cb"
mauve = "#8839ef"
red = "#d20f39"
maroon = "#e64553"
peach = "#fe640b"
yellow = "#df8e1d"
green = "#40a02b"
teal = "#179299"
sky = "#04a5e5"
sapphire = "#209fb5"
blue = "#1e66f5"
lavender = "#7287fd"
text = "#4c4f69"
subtext1 = "#5c5f77"
subtext0 = "#6c6f85"
overlay2 = "#7c7f93"
overlay1 = "#8c8fa1"
overlay0 = "#9ca0b0"
surface2 = "#acb0be"
surface1 = "#bcc0cc"
surface0 = "#ccd0da"
base = "#eff1f5"
mantle = "#e6e9ef"
crust = "#dce0e8"

[palettes.catppuccin_frappe]
rosewater = "#f2d5cf"
flamingo = "#eebebe"
pink = "#f4b8e4"
mauve = "#ca9ee6"
red = "#e78284"
maroon = "#ea999c"
peach = "#ef9f76"
yellow = "#e5c890"
green = "#a6d189"
teal = "#81c8be"
sky = "#99d1db"
sapphire = "#85c1dc"
blue = "#8caaee"
lavender = "#babbf1"
text = "#c6d0f5"
subtext1 = "#b5bfe2"
subtext0 = "#a5adce"
overlay2 = "#949cbb"
overlay1 = "#838ba7"
overlay0 = "#737994"
surface2 = "#626880"
surface1 = "#51576d"
surface0 = "#414559"
base = "#303446"
mantle = "#292c3c"
crust = "#232634"

[palettes.catppuccin_macchiato]
rosewater = "#f4dbd6"
flamingo = "#f0c6c6"
pink = "#f5bde6"
mauve = "#c6a0f6"
red = "#ed8796"
maroon = "#ee99a0"
peach = "#f5a97f"
yellow = "#eed49f"
green = "#a6da95"
teal = "#8bd5ca"
sky = "#91d7e3"
sapphire = "#7dc4e4"
blue = "#8aadf4"
lavender = "#b7bdf8"
text = "#cad3f5"
subtext1 = "#b8c0e0"
subtext0 = "#a5adcb"
overlay2 = "#939ab7"
overlay1 = "#8087a2"
overlay0 = "#6e738d"
surface2 = "#5b6078"
surface1 = "#494d64"
surface0 = "#363a4f"
base = "#24273a"
mantle = "#1e2030"
crust = "#181926"

[palettes.catppuccin_mocha]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"

# ---

[os]
format = '[$symbol](bold white) '
disabled = false
style = "dimmed yellow"

[os.symbols]
Windows = ' '
Arch = '󰣇'
Ubuntu = ''
Macos = '󰀵'

# ---

[username]
show_always = false
format = "[$user]($style) "
style_user = "dimmed blue"
style_root = "bright red"
disabled = false

[hostname]
ssh_only = true
format = "[@$hostname]($style) "
style = "dimmed yellow"
disabled = false

[directory]
truncation_length = 3
truncate_to_repo = true
format = "[$path]($style)[$read_only]($read_only_style) "
style = "cyan"
read_only = " 🔒"
read_only_style = "red"

[git_branch]
format = "[$symbol$branch]($style) "
symbol = "git:"
style = "dimmed green"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "dimmed green"
conflicted = "≠"
ahead = "↑${count}"
behind = "↓${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
untracked = "?${count}"
stashed = "📦"
modified = "!${count}"
staged = "+${count}"
deleted = "✘${count}"

[cmd_duration]
min_time = 2000
format = "took [$duration]($style) "
style = "dimmed yellow"

[status]
disabled = false
format = "[$symbol $status]($style) "
symbol = "✗"
style = "red"

[kubernetes]
format = 'k8s:[$context(:$namespace)]($style) '
style = "dimmed purple"
disabled = false
detect_files = ['k8s', 'kubernetes', 'Dockerfile', 'docker-compose.yml', 'kind.yml', 'helmfile.yaml']
context_aliases = { "dev-cluster" = "dev", "staging-cluster" = "staging", "production-cluster" = "prod" }

# Language/Tool Status
[docker_context]
format = "docker:[$context]($style) "
style = "dimmed blue"
only_with_files = true
disabled = false

[terraform]
format = "tf:[$workspace]($style) "
style = "dimmed blue"
disabled = false

[python]
format = 'py:[$version]($style) '
style = "dimmed yellow"
detect_extensions = ['py']
detect_files = ['requirements.txt', 'pyproject.toml', 'setup.py']
disabled = false

[nodejs]
format = "node:[$version]($style) "
style = "dimmed green"
disabled = false
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ['package.json', '.node-version']

[ruby]
disabled = false
format = 'via [💎 $version](red bold) '
detect_extensions = ['rb']

# Disabled Modules
[vagrant]
disabled = true

[helm]
disabled = true

# Time (only shown when prompt idle for >10s)
[time]
disabled = false
format = "[$time]($style) "
style = "dimmed white"
time_format = "%H:%M:%S"
utc_time_offset = "local"
use_12hr = false
time_range = "10:00:00-"

# Go
[golang]
format = "go:[$version]($style) "
style = "dimmed cyan"
disabled = false
detect_files = ['go.mod', 'go.sum', 'go.work', 'Gopkg.lock', 'Gopkg.toml']
